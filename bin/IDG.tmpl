#! /bin/bash -l

set -ux

dbdir=DBDIR

function test_fail {
if [[ $1 != 0 ]]
then
    ${dbdir}/bin/track_task.py fail --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
    exit $1
fi
}

# Set version number
version=4.0 # First IDG pipeline Feb 2020
cores=NCPUS
memory=MEMORY
jobname=JOBNAME
base=BASEDIR
self=SELFCAL
obslist=OBSLIST

export OMP_NUM_THREADS=$cores

obslistfile=`basename $obslist`
imageprefix=${obslistfile%.*}

# WSClean suffixes for subchannels and MFS
subchans="MFS 0000 0001 0002 0003"
# Minimum uvw for self-calibration (in lambda)
minuv=75
# S/N Level at which to choose masked pixels for deepclean
msigma=3
# S/N Threshold at which to stop cleaning
tsigma=1
# Set max separation for flux_warp crossmatch as ~ 1 beamwidth:
separation=$(echo "120/3600" | bc -l)

# Update database
cd ${base}
${dbdir}/bin/track_task.py start --jobid=${SLURM_JOBID} --taskid=1 --start_time=`date +%s`

obss=($(sort $obslist))
num=${#obss[@]}
last=${obss[-1]}
middle=${obss[$((num / 2))]}

# What does this do?
nvidia-modprobe -u

metafits=`ls -1 $last/*metafits* | head -1`

# Set up telescope-configuration-dependent options based on the highest-numbered observation
if [[ $last -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=1.1
    imsize=4000
    robust=-1.0
else
    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.0
fi

# Set up channel-dependent options
chan=`pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}'`
# Pixel scale
scale=`echo "$basescale / $chan" | bc -l` # At least 4 pix per synth beam for each channel
# Calculate min uvw in metres
minuvm=`echo "234 * $minuv / $chan" | bc -l`

MWAPATH=/opt/mwa/mwa_pb/src/mwa_pb/data/

mslist=""
for obsnum in ${obss[@]} ; do mslist="$mslist $obsnum/$obsnum.ms" ; done


if $self
then
    wsclean -mgain 0.8 \
        -aterm-config ${jobname}_aterm.config \
        -aterm-kernel-size 32 \
        -abs-mem ${memory} \
        -use-idg -idg-mode hybrid \
        -nmiter 2 \
        -j ${cores} \
        -join-channels \
        -channels-out 4 \
        -niter 10000000 \
        -mwa-path ${MWAPATH} \
        -auto-threshold $msigma \
        -name ${imageprefix} \
        -size ${imsize} ${imsize} \
        -scale ${scale:0:8} \
        -weight briggs ${robust} \
        -pol I \
        -data-column CORRECTED_DATA \
        $mslist

    for obsnum in ${obss[@]}
    do
        cd $obsnum
        calibrate -j ${cores} -absmem ${memory} -minuv $minuvm ${obsnum}.ms ${obsnum}_postidg_solutions.bin | tee idg_calibrate.log
        aocal_plot.py --refant=127 ${obsnum}_postidg_solutions.bin
        flaggedchans=`grep "gains to NaN" calibrate.log | awk '{printf("%03d\n",$2)}' | sort | uniq | wc -l`

        if [[ $flaggedchans -gt 200 || ! -s ${obsnum}_postidg_solutions.bin ]]
        then
            echo "More than a third of the channels were flagged!"
            echo "Do not apply these calibration solutions."
            mv ${obsnum}_postidg_solutions.bin ${obsnum}_postidg_solutions.bad
        else
            applysolutions ${obsnum}.ms ${obsnum}_postidg_solutions.bin
            exit 1
        fi
        cd ../
    done

    mkdir ${imageprefix}_before_self-cal
    mv ${imageprefix}*fits ${imageprefix}_before_self-cal/

fi

wsclean \
    -multiscale -mgain 0.85 -multiscale-gain 0.15 \
    -aterm-config aterm.config \
    -aterm-kernel-size 32 \
    -use-idg -idg-mode hybrid \
    -abs-mem ${memory} \
    -nmiter 5 \
    -j ${cores} \
    -niter 10000000 \
    -mwa-path ${MWAPATH} \
    -auto-mask $msigma \
    -auto-threshold $tsigma \
    -name ${imageprefix} \
    -size ${imsize} ${imsize} \
    -scale ${scale:0:8} \
    -weight briggs ${robust} \
    -pol I \
    -join-channels \
    -channels-out 4 \
    -data-column CORRECTED_DATA \
    $mslist
test_fail $?

${dbdir}/bin/track_task.py finish --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
