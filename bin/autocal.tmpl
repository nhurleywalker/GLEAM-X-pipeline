#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M HOST
#SBATCH -p workq
#SBATCH --account=ACCOUNT
#SBATCH --time=02:00:00
#SBATCH --nodes=1
TASKLINE

pipeuser=PIPEUSER
source /group/mwasci/$pipeuser/GLEAM-X-pipeline/GLEAM-X-pipeline.profile

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
    exit $1
fi
}

cores=`grep -P '^core id\t' /proc/cpuinfo  | wc -l`
obsnum=OBSNUM
datadir=DATADIR
modeldir="/group/mwasci/code/anoko/mwa-reduce/models"
refant=127

# GLEAM-X sky model
catfile="/group/mwasci/$pipeuser/GLEAM-X-pipeline/models/GGSM.fits"

# MWA beam information
MWAPATH=/group/mwasci/software/mwa_pb/mwa_pb/data/

# Minimum baseline of 75 lambda (=250m at 88 MHz) for calibration
minuv=75

# Perform ionospheric triage? (1 means yes, blank means no)
ion=IONOTEST
# Interval for ionospheric triage (in time steps)
# Typically we have 2-minute observations which have been averaged to 4s
# So in total they contain 30 time steps
# Do do useful ionospheric differencing we need to compare the start and the end
ts=10

# start
track_task.py start --jobid=${SLURM_JOBID} --taskid=1 --start_time=`date +%s`

cd ${datadir}/${obsnum}
metafits="${obsnum}.metafits"
if [[ ! -e ${metafits} ]] || [[ ! -s ${metafits} ]]
then
    wget -O ${metafits} http://ws.mwatelescope.org/metadata/fits?obs_id=${obsnum}
    test_fail $?
fi

echo "Running infield calibration for $obsnum"
RA=$( pyhead.py -p RA $metafits | awk '{print $3}' )
Dec=$( pyhead.py -p DEC $metafits | awk '{print $3}' )
chan=$( pyhead.py -p CENTCHAN $metafits | awk '{print $3}' )

if [[ ! -e "${obsnum}_local_gleam_model.txt" ]]
then
    /group/mwasci/$pipeuser/GLEAM-X-pipeline/bin/crop_catalogue.py --ra=$RA --dec=$Dec --radius=30 --minflux=1.0 --metafits=${metafits} --catalogue=${catfile} --fluxcol=S_200 --plot ${obsnum}_local_gleam_model.png --output ${obsnum}_cropped_catalogue.fits
    /group/mwasci/$pipeuser/GLEAM-X-pipeline/bin/vo2model.py --catalogue=${obsnum}_cropped_catalogue.fits --point --output=${obsnum}_local_gleam_model.txt --racol=RAJ2000 --decol=DEJ2000 --acol=a --bcol=b --pacol=pa --fluxcol=S_200 --alphacol=alpha
fi
modeldir=.
calmodel=${obsnum}_local_gleam_model.txt

# Check whether the phase centre has already changed
# Calibration will fail if it has, so measurement set must be shifted back to its original position
current=`chgcentre ${obsnum}.ms`
if [[ $current == *"shift"* ]]
then
    echo "Detected that this measurement set has undergone a denormal shift; this must be undone before calibration."
    coords=`python /group/mwasci/$pipeuser/GLEAM-X-pipeline/bin/calc_pointing.py --metafits=${metafits}`
    echo "Optimally shifting co-ordinates of measurement set to $coords, without zenith shiftback."
    chgcentre ${obsnum}.ms $coords
else
    echo "Detected that this measurement set has not yet had its phase centre changed. Not shifting."
fi

# uv range for calibration based on GLEAM-based sky model
# Calibrate takes a maximum uv range in metres
# Calculate min uvw in metres
minuvm=`echo "234 * $minuv / $chan" | bc -l`
# In wavelengths, maximum 128T baseline at 200MHz was 1667 lambda long
# 300/1.28 * 1667 = 390000
# Calculate max uvw in metres
maxuvm=`echo "390000 / ($chan + 11)" | bc -l`

if [[ ! -z $ion ]]
then
    # Ionospheric triage
    solutions=${obsnum}_${calmodel%%.txt}_solutions_ts${ts}.bin
    # Remove duplicate obsnum
    solutions=${solutions/${obsnum}_${obsnum}_/${obsnum}_}
    calibrate -t ${ts} -j ${cores} -m ${modeldir}/${calmodel} -minuv $minuvm -maxuv $maxuvm -applybeam -mwa-path ${MWAPATH} ${obsnum}.ms ${solutions}
    aocal_plot.py --refant=${refant} --amp_max=2 ${solutions}
    aocal_diff.py --metafits=$metafits --names $solutions
    iono_update.py --ionocsv ${obsnum}_ionodiff.csv
fi

# At the moment, assume that the ionosphere is OK, and derive some real solutions
solutions=${obsnum}_${calmodel%%.txt}_solutions_initial.bin
# Remove duplicate obsnum
solutions=${solutions/${obsnum}_${obsnum}_/${obsnum}_}

# calibrate
calibrate -j ${cores} -m ${modeldir}/${calmodel} -minuv $minuvm -maxuv $maxuvm -applybeam -mwa-path ${MWAPATH} ${obsnum}.ms ${solutions}
test_fail $?

# Create a version divided through by the reference antenna, so that all observations have the same relative XY phase, allowing polarisation calibration solutions to be transferred
# This also sets the cross-terms to zero by default
/group/mwasci/$pipeuser/GLEAM-X-pipeline/bin/aocal_phaseref.py ${solutions} ${solutions%.bin}_ref.bin ${refant}

# plot calibration solutions
aocal_plot.py --refant=${refant} --amp_max=2 ${solutions%.bin}_ref.bin
test_fail $?

track_task.py finish --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
